version: '3'

services:
  postgres:
    image: postgres:15
    restart: always
    container_name: postgres
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d secret" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    restart: always
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: app
    command: bash -c "python3 app/manage.py migrate && python3 app/manage.py runserver 0.0.0.0:8000"
    volumes:
      - static_volume:/app/static
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery
    command: bash -c  "cd app/ && celery -A config worker -l INFO"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      app:
        condition: service_started
    env_file:
      - .env
    volumes:
      - static_volume:/app/static

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery-beat
    command: bash -c "cd /app && celery -A config beat -l INFO"
    env_file:
      - .env
    volumes:
      - static_volume:/app/static
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      app:
        condition: service_started

volumes:
  static_volume:
